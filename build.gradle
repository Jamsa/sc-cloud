//依赖版本号
ext.versions = [
        spring: '4.3.17.RELEASE',
        springCloud :'Edgware.SR3'
]
//依赖
ext.libs = [
        "spring-cloud":"org.springframework.cloud:spring-cloud-dependencies:${versions.springCloud}",
        "spring-web":"org.springframework:spring-web:${versions.spring}",
        "spring-boot":"org.springframework.boot:spring-boot-starter",
        "eureka-server":"org.springframework.cloud:spring-cloud-starter-netflix-eureka-server",
        "eureka-client":"org.springframework.cloud:spring-cloud-starter-netflix-eureka-client",
        "zuul":"org.springframework.cloud:spring-cloud-starter-netflix-zuul",
        "feign":"org.springframework.cloud:spring-cloud-starter-feign",
        "config-server":"org.springframework.cloud:spring-cloud-config-server",
        "config-client":"org.springframework.cloud:spring-cloud-config-client",
        "spring-retry":"org.springframework.retry:spring-retry",
        "spring-boot-actuator":"org.springframework.boot:spring-boot-starter-actuator",
        "spring-boot-aop":"org.springframework.boot:spring-boot-starter-aop",
        "bus":"org.springframework.cloud:spring-cloud-starter-bus-amqp",

        //zipkin服务端
        "zipkin-server":"io.zipkin.java:zipkin-server",
        "zipkin-server-ui":"io.zipkin.java:zipkin-autoconfigure-ui",
        "zipkin-server-rabbit":"io.zipkin.java:zipkin-autoconfigure-collector-rabbitmq:2.3.1",
        "zipkin-server-elasticsearch":"io.zipkin.java:zipkin-autoconfigure-storage-elasticsearch-http:2.3.1",

        //zipkin客户端
        "zipkin-client":"org.springframework.cloud:spring-cloud-starter-zipkin",
        "spring-rabbit":"org.springframework.amqp:spring-rabbit",

        //logstash
        "logstash":"net.logstash.logback:logstash-logback-encoder:4.6"
]
//只起分类作用的目录
ext.excludeFolds = ["provider","consumer"]

buildscript {
    ext {
        //springIOVersion = '1.0.5.RELEASE'
        springBootVersion = '1.5.13.RELEASE'
    }
    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}


subprojects {
    //对分类目录不需要进行配置
    if(excludeFolds.contains(name)) return


    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        mavenCentral()
    }

    apply plugin: 'java'

    apply plugin: "io.spring.dependency-management"

    dependencyManagement {
        imports {
            mavenBom libs.'spring-cloud'
        }
    }

    //api工程不需要使用spring boot插件
    if(!name.contains("api")) {
        apply plugin: 'org.springframework.boot'
    }

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    group = 'org.github.jamsa.sc'
    version = '0.0.1'

    if(name=='api'){
        // API类工程的基本依赖
        dependencies {
            compile libs.'spring-web'
        }
    }else{
        // Feign客户端工程的基本依赖
        dependencies {
            compile libs.'feign'
            compile libs.'eureka-client'
            compile libs.'spring-boot-actuator'
            compile libs.'bus'
        }
    }

    // service 和 gateway 工程的依赖，zipkin 客户端
    if(name=='service'||name=='gateway') {
        dependencies {
            compile libs.'zipkin-client'
            compile libs.'spring-rabbit'
            compile libs.'logstash'
        }
    }

    //设置打包参数
    tasks.withType(Jar) {
        //包名为 sc-项目名-模块名，如果父项目为根项目，则不添加“项目名”
        archivesBaseName = "sc-"+(project.parent==rootProject?project.name:project.parent.name+"-"+project.name)
        baseName = archivesBaseName
    }
}


