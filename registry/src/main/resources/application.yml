spring:
  profiles:
    active: dev
  application:
    name: sc-registry
server:
  port: 9001
eureka:
  client:
    registerWithEureka: false
    fetchRegistry: false

#取消权限验证
management:
  security:
    enabled: false


# 启用/restart端点重新启动应用程序上下文。
endpoints:
  restart:
    enabled: true

logging:
  level:
    root: INFO
    org.springframework.web.servlet.DispatcherServlet: DEBUG
    org.springframework.cloud.sleuth: DEBUG

---
# dev profile
spring:
  profiles: dev
  rabbitmq:
      host: localhost
      port: 5672
      username: guest
      password: guest
eureka:
  instance:
    appname: ${spring.application.name}
    #hostname: localhost
  client:
    serviceUrl:
      defaultZone: http://localhost:${server.port}/eureka/

---
# docker profile
spring:
  profiles: docker
  rabbitmq:
      host: rabbitmq
      port: 5672
      username: guest
      password: guest
eureka:
  instance:
    appname: ${spring.application.name}
    #客户端使用ip地址注册，在k8s中才能正常工作
    perferIpAddress: true
    instance-id: ${spring.cloud.client.ipAddress}:${server.port}
    #hostname: ${spring.application.name}
  client:
    serviceUrl:
      defaultZone: http://sc-registry-0.sc-registry.default.svc.cluster.local:9001/eureka/,http://sc-registry-1.sc-registry.default.svc.cluster.local:9001/eureka/
